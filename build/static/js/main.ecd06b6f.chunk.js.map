{"version":3,"sources":["components/station/station.js","components/stationList/stationList.js","components/fare/fare.js","components/body/body.js","components/nav/nav.js","components/footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Station","props","handleClick","bind","e","preventDefault","this","type","updateStation","stopName","stopId","stationClass","activeElement","className","onClick","Component","StationList","state","items","fetch","then","res","json","result","setState","name","map","item","stop_name","stop_id","Fare","price","Body","departure","arrival","fareid","farename","depstopId","arrstopId","prevProps","prevState","fareId","filter","origin_id","destination_id","fareValue","fare_id","Nav","Footer","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecd06b6f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './station.css'\n\n\nclass Station extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(e) {\n    e.preventDefault();\n    if (this.props.type != \"fare\")\n      this.props.updateStation(this.props.stopName, this.props.stopId, this.props.type)\n\n  }\n\n  render() {\n    let stationClass = (this.props.activeElement == this.props.stopName) ? \"stationWrapper clicked\" : \"stationWrapper\";\n    // console.log(this.state.items)\n    return (\n      <div className={stationClass} onClick={this.handleClick}>\n        <div className=\"stationHeader\">\n          <h3>\n            {this.props.stopName}</h3>\n        </div>\n        <div className=\"stationBody\" >\n          <div className=\"stationName\">\n            <p>stopId</p>\n            <p>:</p>\n            <p>{this.props.stopId}</p>\n\n          </div>\n          <div className=\"stationName\">\n\n            <p>Theme</p>\n            <p>:</p>\n            <p>Business</p>\n\n          </div >\n          <div className=\"stationName\">\n            <p>theme </p>\n            <p>:</p>\n            <p>details</p>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n}\nexport default Station;","import React, { Component } from 'react';\nimport './stationList.css';\nimport Station from '../station/station'\n\nclass StationList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [{}]\n        }\n    }\n    componentDidMount() {\n        fetch(\"http://52.203.100.234:5010/files/stops.txt\")\n            .then(res => res.json())\n            .then(result => {\n                this.setState({ items: result });\n            }\n            )\n    }\n    \n    render() {\n       \n        return (\n            <div >\n                <h2 >{this.props.name}</h2>\n                \n                <div className=\"listWrapper\" >{\n                    this.state.items.map(item => (\n                        <Station updateStation={this.props.updateStation} type={this.props.type} stopName={item.stop_name} stopId={item.stop_id} activeElement={this.props.activeElement}/>\n\n                    ))\n\n\n                }\n                </div>\n            </div>\n        )\n    }\n}\nexport default StationList;","import React, { Component } from 'react'\nimport './fare.css'\n\nclass Fare extends Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"fare\">\n                <h4>Fare</h4>\n                <div className=\"fareBox\">\n                    {this.props.price}\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default Fare;","import React, { Component } from 'react';\nimport Station from '../station/station'\nimport StationList from '../stationList/stationList'\nimport './body.css'\nimport Fare from '../fare/fare'\n\nclass Body extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departure: \"\",\n            arrival: \"\",\n            fareid: [{}],\n            farename: [{}],\n            price: \"\"\n        };\n        this.updateStation = this.updateStation.bind(this);\n\n    }\n    componentDidMount() {\n        fetch(\"http://52.203.100.234:5010/files/fare_rules.txt\")\n            .then(res => res.json())\n            .then(result => {\n                this.setState({ fareid: result });\n            }\n            )\n        fetch(\"http://52.203.100.234:5010/files/fare_attributes.txt\")\n            .then(res => res.json())\n            .then(result => {\n                this.setState({ farename: result });\n            }\n            )\n\n    }\n    updateStation(stop_name, stop_id, type) {\n        if (type == \"departure\") {\n            if (this.state.arrival != stop_name) {\n                this.setState({ departure: stop_name, depstopId: stop_id });\n            }\n\n        }\n        if (type == \"arrival\") {\n            if (this.state.departure != stop_name) {\n                this.setState({ arrival: stop_name, arrstopId: stop_id });\n            }\n        }\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.departure && this.state.arrival) {\n            if (prevState.departure != this.state.departure || prevState.arrival != this.state.arrival) {\n                var fareId = this.state.fareid.filter(item => {\n                    return (item.origin_id == this.state.depstopId &\n                        item.destination_id == this.state.arrstopId)\n                })\n\n                var fareValue = this.state.farename.filter(item => {\n                    return item.fare_id === fareId[0].fare_id\n                })\n                this.setState({ price: fareValue[0].price })\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"bodyContentWrapper\">\n                    <h2>\n                        Metro Station Details and Fare Details\n                    </h2>\n                    <p className=\"bodyContent\">\n                        By selecting the departure and arrival stations in the below you will be able to see the ticket fare\n                    </p>\n                </div>\n                <div className=\"scrollList\">\n\n                    <StationList name={\"Select Departure Station\"} type=\"departure\" activeElement={this.state.departure} updateStation={this.updateStation} />\n                    <StationList name={\"Select Arrival Station\"} type=\"arrival\" activeElement={this.state.arrival} updateStation={this.updateStation} />\n                </div >\n                <div  className=\"fare-description\">\n                { this.state.departure && this.state.arrival ? <div className=\"fareResult\">\n                    Trip Details\n                    <div className=\"fareResultbox\">\n                        <Station stopName={this.state.departure} stopId={this.state.depstopId} type=\"fare\" />\n                        <Station stopName={this.state.arrival} stopId={this.state.arrstopId} type=\"fare\" />\n                        <Fare price={this.state.price} />\n\n                    </div></div> : <div></div>}\n                    </div>\n\n\n            </div>\n        )\n    }\n}\nexport default Body;","import React, { Component } from 'react'\nimport './nav.css'\n\nclass Nav extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"navWrapper\">\n               \n                <div className=\"navHead\">\n                    <h1>KOCHI METRO</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Nav;","import React, { Component } from 'react'\nimport './footer.css'\n\nclass Footer extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div class=\"footWrapper\">\n                Footer with Instagram and Facebook link if possible\n                </div>\n        )\n    }\n}\nexport default Footer;","\nimport './App.css';\nimport Body from './components/body/body'\nimport Nav from './components/nav/nav'\nimport Footer from './components/footer/footer'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Body/>\n      <Footer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}